name: Flutter CI/CD

on:
  push:
    branches: [ "**" ]


jobs:
  # ────────────────────────────────────────────────────────────
  # Build Android APK + Web in parallel on Ubuntu runners
  # ────────────────────────────────────────────────────────────
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [ apk, web ]  # add more targets if needed (ios, linux, etc.)

    steps:
      - uses: actions/checkout@v4

      # Set up Flutter (downloads & caches the SDK automatically)
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable          # or 'beta', 'master'
          cache: true              # re-use across jobs

      - run: flutter --version

      - name: Get dependencies
        run: flutter pub get

      - name: Build ${{ matrix.target }}
        run: |
          if [ "${{ matrix.target }}" = "apk" ]; then
            flutter build apk --release
          elif [ "${{ matrix.target }}" = "web" ]; then
            flutter build web --release
          fi

      - name: Upload ${{ matrix.target }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          if-no-files-found: error
          path: |
            # Glob patterns for each build output
            build/app/outputs/flutter-apk/*.apk
            build/web

  # ────────────────────────────────────────────────────────────
  # (Optional) Windows desktop build – only runs on tags
  # ────────────────────────────────────────────────────────────
  build_windows:

    runs-on: windows-latest

    steps:
      # Enable long paths before the repo is checked out
      - name: Enable Git long paths
        run: git config --system core.longpaths true

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: flutter pub get
      - run: flutter build windows --release

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-windows
          if-no-files-found: error
          path: build/windows/runner/Release/*/*.exe

  build_ios_xcode16:
    name: Build iOS (Xcode 16)
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Select Xcode 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.32.5'

      - name: Get Packages
        run: flutter pub get

      - name: Prepare iOS project (iOS 13 target)
        run: |
          # Generate Podfile if it doesn't exist
          if [ ! -f ios/Podfile ]; then
            flutter build ios --no-codesign --simulator || true
          fi

          # Ensure platform iOS 13 in Podfile
          if grep -qE "^platform :ios" ios/Podfile; then
            sed -i '' -E "s/^platform :ios, *'[0-9.]+'/platform :ios, '13.0'/" ios/Podfile
          else
            sed -i '' "1s/^/platform :ios, '13.0'\n/" ios/Podfile
          fi

          # Bump deployment target in Xcode project to 13.0
          sed -i '' -E 's/IPHONEOS_DEPLOYMENT_TARGET = [0-9]+\.[0-9]+/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' ios/Runner.xcodeproj/project.pbxproj

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update
          cd ..

      - name: Build iOS (no codesign)
        run: flutter build ios --no-codesign
