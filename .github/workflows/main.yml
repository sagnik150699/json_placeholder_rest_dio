name: Flutter CI/CD

on:
  push:
    branches: [ "**" ]


jobs:
  # ────────────────────────────────────────────────────────────
  # Build Android APK + Web in parallel on Ubuntu runners
  # ────────────────────────────────────────────────────────────
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [ apk, web ]  # add more targets if needed (ios, linux, etc.)

    steps:
      - uses: actions/checkout@v4

      # Set up Flutter (downloads & caches the SDK automatically)
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable          # or 'beta', 'master'
          cache: true              # re-use across jobs

      - run: flutter --version

      - name: Get dependencies
        run: flutter pub get

      - name: Build ${{ matrix.target }}
        run: |
          if [ "${{ matrix.target }}" = "apk" ]; then
            flutter build apk --release
          elif [ "${{ matrix.target }}" = "web" ]; then
            flutter build web --release
          fi

      - name: Upload ${{ matrix.target }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          if-no-files-found: error
          path: |
            # Glob patterns for each build output
            build/app/outputs/flutter-apk/*.apk
            build/web

  # ────────────────────────────────────────────────────────────
  # (Optional) Windows desktop build – only runs on tags
  # ────────────────────────────────────────────────────────────
  build_windows:
    if: startsWith(github.ref, 'refs/tags/')   # remove this line to run on every push
    runs-on: windows-latest

    steps:
      # Enable long paths before the repo is checked out
      - name: Enable Git long paths
        run: git config --system core.longpaths true

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: flutter pub get
      - run: flutter build windows --release

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-windows
          if-no-files-found: error
          path: build/windows/runner/Release/*/*.exe

